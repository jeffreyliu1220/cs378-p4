{"version":3,"sources":["LoginPage/Login.js","MainPage/MainPage.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","provider","GoogleAuthProvider","Login","_useState","useState","_useState2","_slicedToArray","setUser","navigate","useNavigate","useEffect","onAuthStateChanged","user","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","signInWithPopup","then","result","credentialFromResult","accessToken","console","log","catch","error","code","message","customData","email","credentialFromError","stop","apply","arguments","_jsx","_Fragment","children","_jsxs","style","height","display","justifyContent","alignItems","flexDirection","GoogleButton","onClick","MainPage","currentUser","consolee","Logout","Form","Button","signOut","firstInputValue","setFirstInputValue","_useState3","_useState4","secondInputValue","setSecondInputValue","_useState5","_useState6","dataPostResult","setDataPostResult","_useState7","_useState8","dataRetrieveResult","setDataRetrieveResult","_useState9","_useState10","_useState11","_useState12","className","TextField","id","label","fullWidth","value","onChange","event","target","variant","sampleDict","date","Date","text","fetch","concat","method","body","JSON","stringify","res","status","statusText","sendData","json","keys","Object","dataPoints","map","k","filter","e","length","data","slice","App","Router","Routes","Route","exact","path","element","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cb24b935.chunk.js","sourcesContent":["//Goal: Basically create a form to have login stuff in it\r\n//TODO: Create UI for Login: Done\r\n//TODO: Create functionality for Login\r\n//TODO: Switch to new page if authenticated\r\n\r\n\r\nimport {\r\n  getAuth,\r\n  connectAuthEmulator,\r\n  signInWithCredenials,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  onAuthStateChanged\r\n} from 'firebase/auth'\r\nimport {GoogleButton} from 'react-google-button'\r\nimport {useState, useEffect} from 'react'\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA5RNzX4djVgWHR76UOGkVLVvt4kPdaXGM\",\r\n  authDomain: \"human-computer-interacti-bc357.firebaseapp.com\",\r\n  databaseURL: \"https://human-computer-interacti-bc357-default-rtdb.firebaseio.com\",\r\n  projectId: \"human-computer-interacti-bc357\",\r\n  storageBucket: \"human-computer-interacti-bc357.appspot.com\",\r\n  messagingSenderId: \"1087306834452\",\r\n  appId: \"1:1087306834452:web:c4e5b2379c41ef85927d01\",\r\n  measurementId: \"G-3Y9Q0CFP7C\"\r\n};\r\n\r\n// Initialize Firebase and Emulator\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n//connectAuthEmulator(auth);\r\n\r\n//Initialize google sign in\r\nconst provider = new GoogleAuthProvider();\r\n\r\n\r\n\r\n\r\nexport default function Login(){\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //If user is already logged in just go straight to main page\r\n    useEffect(() => {\r\n      const auth = getAuth();\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          // User is signed in.\r\n          // ...\r\n          setUser(user)\r\n          navigate('/MainPage');\r\n        } \r\n      });\r\n    })\r\n\r\n    //On click bring up popup and switch to main page if user crds are correct\r\n    const handleClick = async () => {\r\n      signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        // The signed-in user info.\r\n        setUser(result.user);\r\n        // IdP data available using getAdditionalUserInfo(result)\r\n        console.log(result.user);\r\n       \r\n        //Go to main page if user is not null\r\n        if (result.user != null){\r\n          console.log(\"NAVIGATING\");\r\n          navigate('/MainPage');\r\n        }else{\r\n          console.log(\"CANNOT NAVIGATE\");\r\n        }\r\n\r\n      }).catch((error) => {\r\n        console.log(\"HAVING SOME SORT OF ERROR IDK WHATT IS GOING ON?\");\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.customData.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        // ...\r\n      });\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n            <div style={{height: \"100%\", display:\"flex\", justifyContent: \"space-between\", alignItems: \"center\", flexDirection: \"column\"}}>\r\n              <div>\r\n                <h1>P4 Google Firebase Assignment</h1>\r\n              </div>\r\n              <div style={{display:\"flex\", justifyContent:\"center\", flexDirection: \"column\"}}>\r\n              <h2>Login with Google</h2>\r\n              <GoogleButton onClick={handleClick}></GoogleButton>\r\n              </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Button from 'react-bootstrap/Button';\r\nimport { getAuth, signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from \"@mui/material\";\r\n\r\nconst databaseURL =\r\n  \"https://human-computer-interacti-bc357-default-rtdb.firebaseio.com/\";\r\n\r\n\r\n\r\nexport default function MainPage(){\r\n    const auth = getAuth();\r\n    let user = auth.currentUser;\r\n    console.log(user);\r\n    console.log(\"MAIN PAGE USER: \", user?.email);\r\n\r\n    useEffect(() => {\r\n      const auth = getAuth();\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n            user = auth.currentUser;\r\n            console.log(\"AHHHHHHHHHHH USER:\", user);\r\n        }\r\n        else{\r\n            //Navigate back if refresh logged out?\r\n            consolee.log(\"AHHHHHHHHHHHHHHHH NOTHING????\")\r\n            const navigate = useNavigate();\r\n            navigate(\"/\");\r\n        }\r\n      });\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n        <div>\r\n            Hello: {user?.email}!\r\n        </div>\r\n        \r\n        <Logout></Logout>\r\n        <Form></Form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nfunction Logout(){\r\n    const navigate = useNavigate();\r\n    \r\n    //Logout and navigate back to login page\r\n    const handleLogout = () =>{\r\n        const auth = getAuth();\r\n        signOut(auth).then(() => {\r\n            // Sign-out successful.\r\n            console.log(\"LOGGING OUT\");\r\n            navigate(\"/\");\r\n        }).catch((error) => {\r\n            // An error happened.\r\n            console.log(\"ERROR LOGGING OUT\");\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Button onClick={handleLogout}>Logout</Button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Form() {\r\n  const [firstInputValue, setFirstInputValue] = useState(null);\r\n  const [secondInputValue, setSecondInputValue] = useState(null);\r\n  const [dataPostResult, setDataPostResult] = useState(null);\r\n  const [dataRetrieveResult, setDataRetrieveResult] = useState(null);\r\n  const [retrieveType, setRetrieveType] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n//TODO: If not logged log back in wiht user creds????\r\n    //If user is already logged in just go straight to main page\r\n    useEffect(() => {\r\n      const auth = getAuth();\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n            setUser(user)\r\n        } \r\n      });\r\n    })\r\n\r\n  const sendData = () => {\r\n    setFirstInputValue(\"\");\r\n    setUser(null);\r\n    const sampleDict = {\r\n      user: user.email,\r\n      date: new Date(),\r\n      text: firstInputValue\r\n    };\r\n    return fetch(`${databaseURL + \"/testData\"}/.json`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(sampleDict)\r\n    }).then((res) => {\r\n      if (res.status !== 200) {\r\n        setDataPostResult(\"There was an error: \" + res.statusText);\r\n        // throw new Error(res.statusText);\r\n      } else {\r\n        setDataPostResult(\"Successfully sent. Check Firebase console.\");\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  const getData = () => {\r\n    //console.log(this.props.videoTime)\r\n    fetch(`${databaseURL + \"/testData\"}/.json`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status !== 200) {\r\n          setDataRetrieveResult(\"There was an error: \" + res.statusText);\r\n          // throw new Error(res.statusText);\r\n        } else {\r\n          setDataRetrieveResult(\"Successfully retrieved the data\");\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((res) => {\r\n        //Filter if user matches curr user\r\n        if (res) {\r\n          const keys = Object.keys(res);\r\n          console.log(res);\r\n          const dataPoints = keys\r\n            .map((k) => res[k])\r\n            .filter((e) => e[\"user\"] === user.email);\r\n          setSecondInputValue(dataPoints);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const target = event.target;\r\n    setFirstInputValue(target.value);\r\n    console.log(target.value);\r\n  };\r\n\r\n  const handleRetrieveTypeChange = (event) => {\r\n    const target = event.target;\r\n    setRetrieveType(target.value);\r\n    console.log(target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Modified React + Firebase Tutorial</h1>\r\n      <h2>CS378 23Spring P4</h2>\r\n      <div className=\"container\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Type something to send data\"\r\n          fullWidth\r\n          value={firstInputValue}\r\n          onChange={handleInputChange}\r\n          variant=\"outlined\"\r\n        />\r\n        <Button onClick={() => sendData()}>\r\n          Send data\r\n        </Button>\r\n        <text>{dataPostResult}</text>\r\n      </div>\r\n      <div className=\"container\">\r\n        <Button onClick={() => getData()}>\r\n          Retrieve data\r\n        </Button>\r\n        <text>{dataRetrieveResult}</text>\r\n        {secondInputValue && secondInputValue.length\r\n          ? secondInputValue.map(function (data) {\r\n              return (\r\n                <span className=\"retrieved-data\">\r\n                  {\"Text: \" +\r\n                    data[\"text\"] +\r\n                    \", Date: \" +\r\n                    data[\"date\"].slice(0, 10) +\r\n                    \" \"}\r\n                </span>\r\n              );\r\n            })\r\n          : \"Waiting to retrieve data\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\r\nimport Login from \"./LoginPage/Login\";\r\nimport MainPage from \"./MainPage/MainPage\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function App() {\r\n  return(\r\n    <>\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Login/>} />\r\n        <Route exact path=\"/MainPage\" element={<MainPage/>} />\r\n      </Routes>\r\n    </Router>\r\n    </>\r\n  )\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}